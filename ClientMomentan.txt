#include <iostream>
#include <arpa/inet.h>
#include <stdio.h>
#include <sys/socket.h>
#include <unistd.h>
#include <string>
#include <string.h> //für memset()

#define BUFLEN 512
#define PORT 9930
#define SRV_IP "127.0.0.1"

using namespace std;

void getHelp();

int main(void)
{
  struct sockaddr_in si_other={0};
  int s, slen=sizeof(si_other);
  char buf[BUFLEN],bufCode[3];
  string buffer,bufCom,bufferCode,res;

  s=socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);

  si_other.sin_family = AF_INET;
  si_other.sin_port = htons(PORT);

  inet_aton(SRV_IP, &si_other.sin_addr);
  while(true){
        cout << "brand>>";
        getline(cin, bufCom);
        bufCom.resize(3);
        if(bufCom == "hlp")getHelp();
        else if(bufCom == "clr")system("clear");
        else if(bufCom == "bye")break;
        else if(bufCom == "mdr"){
                sendto(s, bufCom.c_str(), bufCom.length(), 0, (sockaddr *)&si_other, slen);
                recv(s, bufCode, 3, 0);
                bufferCode = bufCode;
                if(bufferCode == "200"){
                        cout << "Give directory a name: ";
                        getline(cin,buffer);
                        if(buffer.find("..") == 0)buffer.clear(); //falls zwei Punkte gefunden werden wird der buffer gelöscht
                        sendto(s, buffer.c_str(), buffer.length(), 0, (sockaddr *)&si_other, slen);
                        memset(bufCode, 0, sizeof(buf));
                        recv(s, bufCode, 3, 0);
                        bufferCode = bufCode;
                        if(bufferCode == "200")cout << "Directory created";
                        else if(bufferCode == "400")cout << "Directory could not be created";
                        else cout << "Unexpected error";
                }else cout << "Connection Error";
        }else if(bufCom == "cdr"){

        }else cout << "Not a Command, try \"hlp\"";
        cout << endl;
  }
  close(s);
  return 0;
}

void getHelp(){
        cout << "just get help lol";
}
