#include <iostream>
#include <arpa/inet.h>
#include <sys/socket.h>
#include <unistd.h>
#include <string>
#include <string.h>

#define BUFLEN 512
#define PORT 9930

using namespace std;

int main(void)
{
  struct sockaddr_in si_me={0};
  struct sockaddr_in si_other={0};
  int s, slen=sizeof(si_other);
  char buf[BUFLEN],bufCom[3];
  string buffer, bufferCode, bufferCommand;

  s=socket(AF_INET, SOCK_DGRAM, IPPROTO_UDP);

  si_me.sin_family = AF_INET;
  si_me.sin_port = htons(PORT);
  si_me.sin_addr.s_addr = htonl(INADDR_ANY);

  bind(s, (sockaddr*)&si_me, sizeof(si_me));
  system("clear");
  while (true)
  {
    recvfrom(s, bufCom, 3, 0, (sockaddr *)&si_other, (socklen_t*)&slen);
    bufferCommand = bufCom;
    bufferCommand.resize(3); //Benötigt weil buffer am ende immer ein 'v' setzt, keine Ahnung warum
    cout << bufferCommand << endl;
    if(bufferCommand == "mdr"){
        bufferCode="200";
        sendto(s, bufferCode.c_str(), bufferCode.length(), 0, (sockaddr *)&si_other, slen);
        memset(buf, 0, sizeof(buf));
        recvfrom(s, buf, BUFLEN, 0, (sockaddr *)&si_other, (socklen_t*)&slen);
        buffer.clear();
        buffer = buf;
        cout << buffer;
        sendto(s, buffer.c_str(), buffer.length(), 0, (sockaddr *)&si_other, slen);
    }else{
        bufferCode="404";
        sendto(s, bufferCode.c_str(), bufferCode.length(), 0, (sockaddr *)&si_other, slen);
    }
  }
  close(s);
  return 0;
}
